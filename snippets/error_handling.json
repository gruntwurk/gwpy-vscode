{
    "User Error": {
        "prefix": "usererror",
        "body": [
            "class ${1:ErrorName}Error(${2|Exception,AttributeError,RuntimeError,NotImplementedError,ValueError|):",
            "\t\"\"\"",
            "\tException raised for a ${1/(.*)/${1:/downcase}/} condition.",
            "\tAccepts an optional message str argument to explain the error.",
            "\t\"\"\"",
            "\tdef __init__(self, message: str = \"\"):",
            "\t\tself._message = message",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn self._message"
        ],
        "description": "Define a new error exception class"
    },
    "User Warning": {
        "prefix": "userwarning",
        "body": [
            "class ${1:WarningName}Warning(UserWarning):",
            "\t\"\"\"",
            "\tException raised to warn of a ${1/(.*)/${1:/downcase}/} condition.",
            "\tAccepts an optional message str argument to explain the warning.",
            "\t\"\"\"",
            "\tdef __init__(self, message: str = \"\"):",
            "\t\tself._message = message",
            "",
            "\tdef __str__(self) -> str:",
            "\t\treturn self._message"
        ],
        "description": "Define a new warning exception class"
    },
    "Ignore Error": {
        "prefix": "ignore",
        "body": [
            "with ignored(${1:Exception}):",
            "\t$0"
        ],
        "description": "As opposed to try...except pass"
    },
    "try:except:": {
        "prefix": "try",
        "body": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}$0",
        "description": "Basic try-except structure (w/re-raise)."
    },
    "try:except:else:finally": {
        "prefix": "tryef",
        "body": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\tpass\nfinally:\n\tpass$0",
        "description": "Full try-except structure (all possible clauses)."
    },
    "ExitCodes": {
        "prefix": "exitcodes",
        "body": [
            "# BSD's list of standard exit codes.",
            "EX_OK = 0",
            "EX_USAGE = 64 # The command was used incorrectly (bad arguments, bad flag, etc.)",
            "EX_DATAERR = 65 # Bad input data",
            "EX_NOINPUT = 66 # Input file doesn't exist/unreadable.",
            "EX_NOUSER = 67",
            "EX_NOHOST = 68",
            "EX_UNAVAILABLE = 69 # A service is unavailable.",
            "EX_SOFTWARE = 70 # An internal software error has been detected.",
            "EX_OSERR = 71 # An operating system error has been detected.",
            "EX_OSFILE = 72 # Some system file does not exist/unreadable/has syntax error.",
            "EX_CANTCREAT = 73 # A (user specified) output file cannot be created.",
            "EX_IOERR = 74 # An error occurred while doing I/O on some file.",
            "EX_TEMPFAIL = 75 # Temporary failure, indicating something that is not really an error.",
            "EX_PROTOCOL = 76 # The remote system returned something that was not possible during a protocol exchange.",
            "EX_NOPERM = 77 # Insufficient permission.",
            "EX_CONFIG = 78 # Something was found in an unconfigured or misconÂ­figured state."
        ],
        "description": "BSD's list of standard exit codes."
    }
}