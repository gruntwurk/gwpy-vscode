{
    "Main for Console App": {
        "prefix": "maincli",
        "body": [
            "import logging",
            "import ${TM_FILENAME_BASE}lib",
            "",
            "# ctrl-space...",
            "argsparse",
            "configparser",
            "",
            "def main():",
            "\tlogging.basicConfig(level=logging.WARNING,format='%(msg)s')",
            "\tif ARGS.verbose:",
            "\t\tlogging.getLogger().setLevel(logging.DEBUG)",
            "\tLOG = logging.getLogger('${TM_FILENAME_BASE}')",
            "\ttry:",
            "\t\t${TM_FILENAME_BASE}lib.${TM_FILENAME_BASE}()",
            "\texcept KeyboardInterrupt:",
            "\t\tpass",
            "",
            "if __name__ == '__main__':",
            "\tmain()"
        ],
        "description": "Standard main launcher for a command-line program (with KeyboardInterrupt)"
    },
    "ArgsParse": {
        "prefix": "argsparse",
        "body": [
            "from argparse import ArgumentParser",
            "ap = ArgumentParser()",
            "ap.add_argument('-v', '--verbose', default=False, action='store_true', help='Increase verbosity')",
            "ap.add_argument('-x', '--max', type=int, default=1, help='The maximum number of times to...')",
            "ap.add_argument('-f', '--format', default='csv', help='How to format the output')",
            "ap.add_argument('source', help='The name of the source file (required)')",
            "",
            "ARGS = ap.parse_args()"
        ],
        "description": "Typical usage for ArgumentParser()"
    },
    "ConfigParser": {
        "prefix": "configparser",
        "body": [
            "from ConfigParser import SafeConfigParser",
            "from os.path import dirname, join",
            "",
            "INSTALL_DIR = dirname(__file__)",
            "CONFIG = SafeConfigParser()",
            "CONFIG.read([join(INSTALL_DIR, 'defaults.ini'),'home_config.ini','config.ini'])"
        ],
        "description": "Basic usage for ConfigParser()"
    },
    "colorama": {
        "prefix": "colorama",
        "body": [
            "import colorama",
            "",
            "if not sys.stdout.isatty():",
            "\tcolorama.init(strip=True)",
            "# print Fore.RED + 'some red text'",
            "# print Back.GREEN + 'and a green background'",
            "\t$0"
        ],
        "description": "Colorizing console output"
    },
    "CmdProgress": {
        "prefix": "cmdprogress",
        "body": [
            "# pip install progressbar2",
            "from progressbar import *",
            "import time",
            "widgets = ['Loading: ', Percentage(), ' ', Bar(),' ', ETA(), ' ', FileTransferSpeed()]",
            "pbar = ProgressBar(widgets=widgets, maxval=20000).start()",
            "for i in range(20000):",
            "\tpbar.update(i)",
            "\ttime.sleep(.005)",
            "pbar.finish()",
            "",
            "\t$0"
        ],
        "description": "Progress bar (for a console app)."
    }
}